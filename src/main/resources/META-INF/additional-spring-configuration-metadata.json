{
  "properties": [
    {
      "name": "async.framework.enabled",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Enable or disable the async processing framework."
    },
    {
      "name": "async.framework.aws.region",
      "type": "java.lang.String",
      "defaultValue": "ap-south-1",
      "description": "AWS region for all services."
    },
    {
      "name": "async.framework.aws.access-key",
      "type": "java.lang.String",
      "description": "AWS access key ID (optional if using IAM roles)."
    },
    {
      "name": "async.framework.aws.secret-key",
      "type": "java.lang.String",
      "description": "AWS secret access key (optional if using IAM roles)."
    },
    {
      "name": "async.framework.aws.role-arn",
      "type": "java.lang.String",
      "description": "AWS IAM role ARN to assume (optional)."
    },
    {
      "name": "async.framework.aws.use-default-credentials-provider",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether to use the default AWS credentials provider chain."
    },
    {
      "name": "async.framework.aws.connection-timeout",
      "type": "java.time.Duration",
      "defaultValue": "PT30S",
      "description": "Connection timeout for AWS service calls."
    },
    {
      "name": "async.framework.aws.socket-timeout",
      "type": "java.time.Duration",
      "defaultValue": "PT2M",
      "description": "Socket timeout for AWS service calls."
    },
    {
      "name": "async.framework.aws.dynamodb.table-name",
      "type": "java.lang.String",
      "defaultValue": "async_requests",
      "description": "DynamoDB table name for storing async requests."
    },
    {
      "name": "async.framework.aws.dynamodb.billing-mode",
      "type": "com.pravah.framework.async.config.DynamoDBConfig$BillingMode",
      "defaultValue": "PAY_PER_REQUEST",
      "description": "DynamoDB billing mode (PROVISIONED or PAY_PER_REQUEST)."
    },
    {
      "name": "async.framework.aws.dynamodb.read-capacity",
      "type": "java.lang.Integer",
      "defaultValue": 5,
      "description": "Read capacity units for provisioned billing mode."
    },
    {
      "name": "async.framework.aws.dynamodb.write-capacity",
      "type": "java.lang.Integer",
      "defaultValue": 5,
      "description": "Write capacity units for provisioned billing mode."
    },
    {
      "name": "async.framework.aws.dynamodb.create-table-if-not-exists",
      "type": "java.lang.Boolean",
      "defaultValue": false,
      "description": "Whether to create the table automatically if it doesn't exist."
    },
    {
      "name": "async.framework.aws.dynamodb.enable-ttl",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether to enable TTL for automatic cleanup."
    },
    {
      "name": "async.framework.aws.dynamodb.default-ttl",
      "type": "java.time.Duration",
      "defaultValue": "P30D",
      "description": "Default TTL duration for async requests."
    },
    {
      "name": "async.framework.aws.sqs.visibility-timeout-seconds",
      "type": "java.lang.Integer",
      "defaultValue": 300,
      "description": "Default visibility timeout for messages in seconds."
    },
    {
      "name": "async.framework.aws.sqs.max-messages",
      "type": "java.lang.Integer",
      "defaultValue": 10,
      "description": "Maximum number of messages to receive in a single poll."
    },
    {
      "name": "async.framework.aws.sqs.wait-time-seconds",
      "type": "java.lang.Integer",
      "defaultValue": 20,
      "description": "Wait time for long polling in seconds."
    },
    {
      "name": "async.framework.aws.sqs.enable-long-polling",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether to enable long polling."
    },
    {
      "name": "async.framework.aws.sqs.max-concurrent-processors",
      "type": "java.lang.Integer",
      "defaultValue": 10,
      "description": "Maximum number of concurrent message processors."
    },
    {
      "name": "async.framework.aws.sqs.enable-batch-processing",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether to enable batch message processing."
    },
    {
      "name": "async.framework.aws.s3.bucket-name",
      "type": "java.lang.String",
      "defaultValue": "async-framework-payloads",
      "description": "S3 bucket name for storing large payloads."
    },
    {
      "name": "async.framework.aws.s3.key-prefix",
      "type": "java.lang.String",
      "defaultValue": "async-requests/",
      "description": "Key prefix for all objects stored in S3."
    },
    {
      "name": "async.framework.aws.s3.storage-class",
      "type": "com.pravah.framework.async.config.S3Config$StorageClass",
      "defaultValue": "STANDARD",
      "description": "S3 storage class for objects."
    },
    {
      "name": "async.framework.aws.s3.create-bucket-if-not-exists",
      "type": "java.lang.Boolean",
      "defaultValue": false,
      "description": "Whether to create the bucket automatically if it doesn't exist."
    },
    {
      "name": "async.framework.aws.s3.encryption.enabled",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether to enable server-side encryption."
    },
    {
      "name": "async.framework.aws.s3.encryption.type",
      "type": "com.pravah.framework.async.config.S3Config$EncryptionConfig$EncryptionType",
      "defaultValue": "SSE_S3",
      "description": "Server-side encryption type (SSE_S3, SSE_KMS, SSE_C)."
    },
    {
      "name": "async.framework.retry.max-attempts",
      "type": "java.lang.Integer",
      "defaultValue": 3,
      "description": "Maximum number of retry attempts for failed requests."
    },
    {
      "name": "async.framework.retry.initial-delay",
      "type": "java.time.Duration",
      "defaultValue": "PT30S",
      "description": "Initial delay before first retry attempt."
    },
    {
      "name": "async.framework.retry.max-delay",
      "type": "java.time.Duration",
      "defaultValue": "PT10M",
      "description": "Maximum delay between retry attempts."
    },
    {
      "name": "async.framework.retry.backoff-multiplier",
      "type": "java.lang.Double",
      "defaultValue": 2.0,
      "description": "Backoff multiplier for exponential retry delay."
    },
    {
      "name": "async.framework.retry.enable-dead-letter-queue",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether to enable dead letter queue for failed requests."
    },
    {
      "name": "async.framework.monitoring.enable-metrics",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether to enable metrics collection."
    },
    {
      "name": "async.framework.monitoring.enable-tracing",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether to enable distributed tracing."
    },
    {
      "name": "async.framework.monitoring.enable-health-checks",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether to enable health checks."
    },
    {
      "name": "async.framework.monitoring.metrics-namespace",
      "type": "java.lang.String",
      "defaultValue": "AsyncFramework",
      "description": "Namespace for metrics collection."
    },
    {
      "name": "async.framework.storage.enable-external-storage",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether to enable external storage for large payloads."
    },
    {
      "name": "async.framework.storage.inline-payload-threshold",
      "type": "java.lang.Integer",
      "defaultValue": 1024,
      "description": "Threshold in bytes for storing payloads inline vs external storage."
    },
    {
      "name": "async.framework.storage.max-payload-size",
      "type": "java.lang.Integer",
      "defaultValue": 10485760,
      "description": "Maximum payload size in bytes (10MB default)."
    },
    {
      "name": "async.framework.storage.compress-payloads",
      "type": "java.lang.Boolean",
      "defaultValue": false,
      "description": "Whether to compress payloads before storage."
    },
    {
      "name": "async.framework.monitoring.enabled",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether monitoring and metrics collection is enabled for the async framework."
    },
    {
      "name": "async.framework.monitoring.collection-interval",
      "type": "java.time.Duration",
      "defaultValue": "30s",
      "description": "Interval for collecting system and performance metrics."
    },
    {
      "name": "async.framework.monitoring.jvm-metrics",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether to collect JVM metrics (memory, threads, GC)."
    },
    {
      "name": "async.framework.monitoring.system-metrics",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether to collect system metrics (CPU, load average)."
    },
    {
      "name": "async.framework.monitoring.business-metrics",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether to collect business-specific metrics."
    },
    {
      "name": "async.framework.monitoring.metric-prefix",
      "type": "java.lang.String",
      "defaultValue": "async.framework",
      "description": "Prefix for all metrics generated by the async framework."
    },
    {
      "name": "async.framework.monitoring.common-tags",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "description": "Common tags to add to all metrics."
    },
    {
      "name": "async.framework.monitoring.detailed-error-tracking",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether to enable detailed error tracking and analysis."
    },
    {
      "name": "async.framework.monitoring.performance-profiling",
      "type": "java.lang.Boolean",
      "defaultValue": false,
      "description": "Whether to enable performance profiling and latency tracking."
    },
    {
      "name": "async.framework.monitoring.cloudwatch.enabled",
      "type": "java.lang.Boolean",
      "defaultValue": false,
      "description": "Whether CloudWatch metrics integration is enabled."
    },
    {
      "name": "async.framework.monitoring.cloudwatch.namespace",
      "type": "java.lang.String",
      "defaultValue": "AsyncFramework",
      "description": "CloudWatch namespace for metrics."
    },
    {
      "name": "async.framework.monitoring.cloudwatch.step",
      "type": "java.time.Duration",
      "defaultValue": "1m",
      "description": "Step interval for publishing metrics to CloudWatch."
    },
    {
      "name": "async.framework.monitoring.cloudwatch.batch-size",
      "type": "java.lang.Integer",
      "defaultValue": 20,
      "description": "Batch size for publishing metrics to CloudWatch."
    },
    {
      "name": "async.framework.monitoring.cloudwatch.common-dimensions",
      "type": "java.util.Map<java.lang.String,java.lang.String>",
      "description": "Common dimensions to add to all CloudWatch metrics."
    },
    {
      "name": "async.framework.monitoring.cloudwatch.percentile-histogram",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether to publish percentile histograms to CloudWatch."
    },
    {
      "name": "async.framework.monitoring.cloudwatch.connect-timeout",
      "type": "java.time.Duration",
      "defaultValue": "10s",
      "description": "Connection timeout for CloudWatch client."
    },
    {
      "name": "async.framework.monitoring.cloudwatch.read-timeout",
      "type": "java.time.Duration",
      "defaultValue": "30s",
      "description": "Read timeout for CloudWatch client."
    },
    {
      "name": "async.framework.monitoring.cloudwatch.custom-dashboards.enabled",
      "type": "java.lang.Boolean",
      "defaultValue": false,
      "description": "Whether to automatically create CloudWatch dashboards."
    },
    {
      "name": "async.framework.monitoring.system-metrics-collector.enabled",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether the system metrics collector is enabled."
    },
    {
      "name": "async.framework.monitoring.performance-monitor.enabled",
      "type": "java.lang.Boolean",
      "defaultValue": false,
      "description": "Whether the performance monitor is enabled."
    },
    {
      "name": "async.framework.monitoring.error-tracker.enabled",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether the error tracker is enabled."
    }
  ],
  "hints": [
    {
      "name": "async.framework.monitoring.metrics-namespace",
      "type": "java.lang.String",
      "defaultValue": "AsyncFramework",
      "description": "Namespace for metrics collection."
    },
    {
      "name": "async.framework.storage.enable-external-storage",
      "type": "java.lang.Boolean",
      "defaultValue": true,
      "description": "Whether to enable external storage for large payloads."
    },
    {
      "name": "async.framework.storage.inline-payload-threshold",
      "type": "java.lang.Integer",
      "defaultValue": 1024,
      "description": "Threshold in bytes for storing payloads inline vs external storage."
    },
    {
      "name": "async.framework.storage.max-payload-size",
      "type": "java.lang.Integer",
      "defaultValue": 10485760,
      "description": "Maximum payload size in bytes (10MB default)."
    },
    {
      "name": "async.framework.storage.compress-payloads",
      "type": "java.lang.Boolean",
      "defaultValue": false,
      "description": "Whether to compress payloads before storage."

    },
    {
      "name": "async.framework.monitoring.collection-interval",
      "values": [
        {
          "value": "10s",
          "description": "Collect metrics every 10 seconds (high frequency)."
        },
        {
          "value": "30s",
          "description": "Collect metrics every 30 seconds (default)."
        },
        {
          "value": "1m",
          "description": "Collect metrics every minute (low frequency)."
        }
      ]
    },
    {
      "name": "async.framework.monitoring.cloudwatch.namespace",
      "values": [
        {
          "value": "AsyncFramework",
          "description": "Default namespace for async framework metrics."
        },
        {
          "value": "MyApp/AsyncFramework",
          "description": "Application-specific namespace."
        }
      ]
    }
  ]
}